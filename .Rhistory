str(suburbTable)
# deliverable 1 ----------------------------------------------------------
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
# deliverable 2 ----------------------------------------------------------
#del2Draft= base + geom_histogram(aes(x=Student.Teacher.Ratio))
#del2Draft
# save del2Draft ----------------------------------------------------------
#saveRDS(del2Draft, file = "del2Draft.rds")
# deliverable 3 ----------------------------------------------------------
#del3Draft= base + geom_point(aes(x=Student.Teacher.Ratio,
#y=Free.Lunch))
#del3Draft
# save del3Draft ----------------------------------------------------------
#saveRDS(del3Draft, file = "del3Draft.rds")
# deliverable 4  ----------------------------------------------------------
#library(sf)
#county_map=sf::read_sf("WA_County_Boundaries.geojson")
#head(county_map)
#head(mydata)
# merge data into map ----------------------------------------------------------
#mydataCounty=aggregate(data=mydata,Free.Lunch~County,FUN = mean)
#myMapLunch=merge(county_map,mydataCounty,by.x='JURISDIC_2',"County")
# prepare plot
#base=ggplot(myMapLunch)
#del4Draft=base + geom_sf(aes(fill=Free.Lunch))
#del4Draft
# save del4Draft ----------------------------------------------------------
#saveRDS(del4Draft, file = "del4Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
library(flexdashboard) # always
library(ggplot2) #will be used for the visualization
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("")
saveRDS(del1Draft, file = "del1Draft.rds")
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
---
title: "Data Visualization Dashbord"
```{r setup, include=FALSE}
## Intro {.sidebar}
Preparing the dashboard based on the instructions given at @magallanes_reyes_data_2022, and @aden-buie_flexdashboard_2024.
```{r}
readRDS("del1Draft.rds")
# deliverable 1 ----------------------------------------------------------
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
library(flexdashboard) # always
library(ggplot2) #will be used for the visualization
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
setwd("~/Documents/UMass - DACSS/Courses/DACSS 690V/DataViz-Dashboard")
readRDS("del1Draft.rds")
library(flexdashboard) # always
library(ggplot2) #will be used for the visualization
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.3) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.1) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = -0.1) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = -0.1) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = -0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
linkMass="https://github.com/DACSS-Visual/tabular_bivar_catcat/raw/refs/heads/main/data/MSP%20DFS%20Arrests%2019-20Q1.xlsx"
#see it
library(rio)
install.packages("rio")
linkMass="https://github.com/DACSS-Visual/tabular_bivar_catcat/raw/refs/heads/main/data/MSP%20DFS%20Arrests%2019-20Q1.xlsx"
#see it
library(rio)
arrests=rio::import(linkMass,which = 1)
head(arrests)
summary(arrests)
colSums(is.na(arrests[c("Arrest_Type", "Age")])) #checking for missing data first
colSums(is.na(arrests[c("Arrest Type", "Age")])) #checking for missing data first
head(arrests[c("Arrest Type", "Age")])
View(arrests[c("Arrest Type", "Age")])
summary(arrests[c("Arrest Type", "Age")])
ggplot(arrests, aes(x = Arrest Type, y = Age)) +
ggplot(arrests, aes(x = Arrest Type, y = Age)) +
colnames(arrests)
colnames(arrests)[colnames(arrests) == "Arrest Type"] <- "Arrest_type"
colnames(arrests)
colnames(arrests)[colnames(arrests) == "Arrest Type"] <- "Arrest_Type"
colnames(arrests)
summary(arrests[c("Arrest Type", "Age")]) #statistical relevance
summary(arrests[c("Arrest_Type", "Age")]) #statistical relevance
summary(arrests)
View(arrests[c("Arrest Type", "Age")]) #viewing the two variables of interest
colnames(arrests)[colnames(arrests) == "Arrest Type"] <- "Arrest_Type" #update the column name
colnames(arrests)
#statistical overview of the dataset
summary(arrests)
View(arrests[c("Arrest Type", "Age")]) #viewing the two variables of interest
colnames(arrests)[colnames(arrests) == "Arrest Type"] <- "Arrest_type" #update the column name
colnames(arrests)
summary(arrests[c("Arrest_type", "Age")]) #statistical relevance
colSums(is.na(arrests[c("Arrest_type", "Age")])) #checking for missing data first
#boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black", alpha = 0.7) +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black", alpha = 0.7) +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black" +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
, alpha = 0.7
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black", alpha = 0.7) +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#del2Draft= base + geom_histogram(aes(x=Student.Teacher.Ratio))
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
unique(arrests$Arrest_type)
arrests$Arrest_type <- gsub("W", "F", arrests$Arrest_type)
unique(arrests$Arrest_type)
arrests_updated <- arrests[!is.na(arrests$arrest_type), ]
arrests_updated <- arrests[!is.na(arrests$Arrest_type), ]
ggplot(arrests_updated, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests_updated, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
theme_minimal() +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
scale_y_continuous(breaks = c(1,40,60)) +
theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
scale_y_continuous(breaks = c(1,40,60)) +
#theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
scale_y_continuous(breaks = c(1,40,60)) +
#theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
#theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Age", y = "Arrest Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Age", y = "Arrest Type"))
#Trying a violin plot
ggplot(arrests, aes(x = Age , y = Arrest_type)) +
geom_violin(fill = "blue", color = "black", alpha = 0.7) +
theme(panel.grid.minor = element_blank()) +
labs(title = "Age Distribution by Arrest Type (Violin Plot)", x = "Age", y = "Arrest Type")
#boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests, aes(x = Arrest_type, y = Age)) +
geom_boxplot(fill = "purple", color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest_type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = arrest_type, y = Age, fill = arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +
labs(title = "Age by Arrest Type", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c("90Z" = "lightblue", "MV" = "purple", "90D" = "orange", "CA" = "green")) +
guides(fill = guide_legend(title = "Arrest Type"))
#boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(fill = "purple", color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Age by Arrest Type", x = "Arrest Type", y = "Age") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arrests$Arrest_type <- gsub("W", "F", arrests$Arrest_type)
#boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by age", x = "Arrest Type",) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
arrests$Arrest_type <- gsub("W", "F", arrests$Arrest_type)
linkMass="https://github.com/DACSS-Visual/tabular_bivar_catcat/raw/refs/heads/main/data/MSP%20DFS%20Arrests%2019-20Q1.xlsx"
#see it
library(rio)
arrests=rio::import(linkMass,which = 1)
head(arrests)
library(rio)
arrests1=rio::import(linkMass,which = 1)
head(arrests1)
ggplot(arrests1, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by age", x = "Arrest Type",) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
colSums(is.na(arrests1[c("Arrest_type", "Age")])) #c
colnames(arrests)[colnames(arrests1) == "Arrest Type"] <- "Arrest_type" #update the column name
colnames(arrests)[colnames(arrests1) == "Arrest Type"] <- "Arrest_type" #update the column name
colnames(arrests1)
#boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests1, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by age", x = "Arrest Type",) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(rio)
arrests1=rio::import(linkMass,which = 1)
head(arrests1)
#Data exploration based on arrest type and age
#statistical overview of the dataset
summary(arrests1)
View(arrests1[c("Arrest Type", "Age")]) #viewing the two variables of interest
colnames(arrests)[colnames(arrests1) == "Arrest Type"] <- "Arrest_type" #update the column name
colnames(arrests1)
summary(arrests1[c("Arrest_type", "Age")]) #statistical relevance
arrests$Arrest_type <- gsub("W", "F", arrests$Arrest_type)
unique(arrests$Arrest_type)
linkMass="https://github.com/DACSS-Visual/tabular_bivar_catcat/raw/refs/heads/main/data/MSP%20DFS%20Arrests%2019-20Q1.xlsx"
#see it
library(rio)
arrests=rio::import(linkMass,which = 1)
head(arrests)
unique(arrests$Arrest_type)
colnames(arrests)[colnames(arrests) == "Arrest Type"] <- "Arrest_type" #update the column name
unique(arrests$Arrest_type)
ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by age", x = "Arrest Type",) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Arrest details by State Police including age and type of offense",
caption = "Source: Mass.gov", ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#boxplots are generally good for showing categorical and numerical relationships -
ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", )
del2Draft -> ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", )
del2Draft -> ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", )
del2Draft->ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", )
del2Draft <-ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", )
del2Draft
saveRDS(del2Draft, file = "del2Draft.rds")
readRDS("del2Draft.rds")
library(flexdashboard) # always
library(ggplot2) #will be used for the visualization
readRDS("del1Draft.rds")
readRDS("del2Draft.rds")
#| warning: false
#| del2Draft <-ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", )
#boxplots are generally good for showing categorical and numerical relationships -
#| warning: false
del2Draft <-ggplot(arrests, aes(x = Arrest_type, y = Age, fill = Arrest_type)) +
geom_boxplot(color = "black") +
theme_minimal() +labs(title = "Arrest Type by Age", x = "Arrest Type",
subtitle = "Massachusetts State Police Arrest Details by age and type of offense",
caption = "Source: Mass.gov", )
del2Draft
readRDS("del2Draft.rds")
readRDS("del2Draft.rds")
#| warning: false
readRDS("del2Draft.rds")
readRDS("del2Draft.rds")
