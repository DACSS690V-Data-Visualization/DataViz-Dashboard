#Making an interactive map
tmap_mode("view")
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference between Tender Type") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
# save del3Draft ----------------------------------------------------------
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
#Making an interactive map
tmap_mode("view")
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference: Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
ggplot(bostonZips) +
geom_sf(aes(fill = RatioCat), color = "white") +
scale_fill_brewer(palette = "RdYlBu", na.value = "grey") +
labs(title = "Ratio of Contributions by Zip Code",
subtitle = "Credit Card by Check",
fill = "Ratio Category",
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal()
#Making an interactive map
#tmap_mode("view")
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
ggplot(bostonZips) +
geom_sf(aes(fill = RatioCat), color = "white") +
scale_fill_brewer(palette = "RdYlBu", na.value = "grey") +
labs(title = "Ratio of Contributions by Zip Code",
subtitle = "Credit Card by Check",
fill = "Ratio Category",
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal()
#Making an interactive map
#tmap_mode("view")
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
#View(bostonZips)
ggplot(bostonZips) +
geom_sf(aes(fill = RatioCat), color = "white") +
scale_fill_brewer(palette = "RdYlBu", na.value = "grey") +
labs(title = "Ratio of Contributions by Zip Code",
subtitle = "Credit Card by Check",
fill = "Ratio Category",
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal()
#Making an interactive map
#map_mode("view")
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
Cggplot_map <- function(data, var, title, subtitle) {
ggplot(data) +
geom_sf(aes(fill = !!sym(var)), color = "white") +
scale_fill_viridis_c(option = "plasma", na.value = "grey") +
labs(title = title,
subtitle = subtitle,
fill = paste(var, "Contributions"),
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 40))
leaflet_map <- tmap_leaflet(tm_shape(bostonZips) +
tm_polygons("Credit Card", palette = "plasma", title = "Credit Card Contributions", alpha = 0.5))
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1, group = "Credit Card") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "red", weight = 1, group = "Check") |>
addLayersControl(
overlayGroups = c("Credit Card", "Check"),
options = layersControlOptions(collapsed = FALSE)
)
Ctmap_interactive <- function(data, var, title) {
tm_shape(data) +
tm_polygons(var, palette = "plasma", title = title, alpha = 0.5) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = data, fillOpacity = 0.5, color = "blue", weight = 1)}
#For credit cards
Cggplot_map(bostonZips, "Credit Card",
"Total Credit Card Contributions by Zip Code",
"By Zip Code")
Ctmap_interactive(bostonZips, "Credit Card", "Credit Card Contributions")
#For checks
Cggplot_map(bostonZips, "Check",
"Total Check Contributions by Zip Code",
"By Zip Code")
Ctmap_interactive(bostonZips, "Check", "Check Contributions")
#Layering and combining maps
leaflet_map <- tmap_leaflet(tm_shape(bostonZips) +
tm_polygons("Credit Card", palette = "plasma", title = "Credit Card Contributions", alpha = 0.5))
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1, group = "Credit Card") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "red", weight = 1, group = "Check") |>
addLayersControl(
overlayGroups = c("Credit Card", "Check"),
options = layersControlOptions(collapsed = FALSE)
)
# save del4Draft ----------------------------------------------------------
#saveRDS(del4Draft, file = "del4Draft.rds")
#Making an interactive map
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
# deliverable 3 ----------------------------------------------------------
#necessary libraries
library(sf)
library(rio)
library(tmap)
library(dplyr)
library(ggplot2)
library(leaflet)
library(classInt)
#uploading the data
linkBoston="https://github.com/DACSS-Visual/SpatialData/raw/refs/heads/main/data/BostonContrib.xlsx"
bostonCont=rio::import(linkBoston)
#Ensure the data uploaded correctly.
#head(bostonCont)
#changing the column name
colnames(bostonCont)[colnames(bostonCont) == "Tender Type Description"] <- "Tender_Type" #update the column name
colnames(bostonCont)
#Ensure the data uploaded correctly.
View(bostonCont)
summary(bostonCont) #learning more about the dataset
#uploading the second datatset with the Boston zip codes
linkZips='https://raw.githubusercontent.com/DACSS-Visual/SpatialData/refs/heads/main/data/zip_codes.json'
bostonZips=sf::read_sf(linkZips)
#Ensure the data uploaded correctly.
head(bostonZips)
summary(bostonZips)
##DATA EXPLORATION -------------------------------------------------------------
#Finding the total distribution by the tender type
bostonCont |>
group_by(Tender_Type) |>
summarize(TotalContrib = sum(Amount, na.rm = TRUE)) |>
ggplot(aes(x = reorder(Tender_Type, TotalContrib),
y = TotalContrib, fill = Tender_Type)) +
geom_col() +
coord_flip() +
labs(title = "Total Contributions by Tender Type",
x = "Tender Type",
y = "Contribution Amount") +
theme_minimal()
#Viewing the relationships between contribution amount and zip code of the person
ggplot(bostonCont, aes(x = Zip, y = Amount)) +
geom_point(alpha = 0.5, aes(color = Tender_Type)) +
labs(title = "Contribution Amounts by Zip Code",
x = "Zip Code",
y = "Contribution Amount",
color = "Tender Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 50))
#Checking how the contribution per tender type and visualizing it
# Calculate total contribution amount per tender type
total_by_tender <- bostonCont |>
group_by(Tender_Type) |>
summarize(TotalAmount = sum(Amount, na.rm = TRUE)) |>
arrange(desc(TotalAmount))
# Print the result
print(total_by_tender)
#data viz to see the output
ggplot(total_by_tender, aes(x = reorder(Tender_Type, -TotalAmount), y = TotalAmount, fill = Tender_Type)) +
geom_col() +
labs(title = "Total Contribution Amount by Tender Type",
x = "Tender Type",
y = "Total Amount") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 40,hjust = 1))
#heatmap to show contribution by tender type
bostonCont |>
group_by(Zip, Tender_Type) |>
summarize(TotalContrib = sum(Amount, na.rm = TRUE)) |>
ggplot(aes(x = Tender_Type, y = Zip, fill = TotalContrib)) +
geom_tile() +
scale_fill_viridis_c(option = "brown") +
labs(title = "Contributions by Tender Type and Zip Code",
x = "Tender Type",
y = "Zip Code",
fill = "Total Contribution") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 40,hjust = 1))
##Cleaning data for the visualization
aggregBoston <- bostonCont |>
filter(Tender_Type %in% c("Credit Card", "Check")) |>
group_by(Tender_Type, Zip) |>
summarize(TotalContrib = sum(Amount, na.rm = TRUE), .groups = "drop") |>
tidyr::pivot_wider(names_from = Tender_Type, values_from = TotalContrib, values_fill = 0)
# Adding comparison columns: Difference and Ratio
aggregBoston <- aggregBoston |>
mutate(
Difference = `Credit Card` - Check,
Ratio = ifelse(Check > 0, `Credit Card` / Check, NA)
)
#head(bostonZips)
#connecting the two datasets
bostonZips <- bostonZips |>
left_join(aggregBoston, by = c("ZIP5" = "Zip"))
##Plotting -------------------------------------------------------------
#plotting a choropleth with the difference in contributions
ggplot(bostonZips) +
geom_sf(aes(fill = Difference), color = "white") +
scale_fill_viridis_c(option = "plasma", na.value = "grey") +
labs(title = "Difference in Contributions by Zip Code",
subtitle = "Tender Type of Credit Card minus Check",
fill = "Difference",
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 40))
#making a description the the ratio found and visualize it
bostonZips <- bostonZips |>
mutate(RatioCat = cut(Ratio, breaks = classIntervals(Ratio, n = 5, style = "quantile")$brks,
labels = c("Very Low", "Low", "Medium", "High", "Very High"),
include.lowest = TRUE))
#View(bostonZips)
ggplot(bostonZips) +
geom_sf(aes(fill = RatioCat), color = "white") +
scale_fill_brewer(palette = "RdYlBu", na.value = "grey") +
labs(title = "Ratio of Contributions by Zip Code",
subtitle = "Credit Card by Check",
fill = "Ratio Category",
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal()
# save del3Draft ----------------------------------------------------------
#Making an interactive map
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
#saveRDS(del3Draft, file = "del3Draft.rds")
# deliverable 4  ----------------------------------------------------------
#creating a choropleth map
Cggplot_map <- function(data, var, title, subtitle) {
ggplot(data) +
geom_sf(aes(fill = !!sym(var)), color = "white") +
scale_fill_viridis_c(option = "plasma", na.value = "grey") +
labs(title = title,
subtitle = subtitle,
fill = paste(var, "Contributions"),
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 40))}
#creating the second interactive map
Ctmap_interactive <- function(data, var, title) {
tm_shape(data) +
tm_polygons(var, palette = "plasma", title = title, alpha = 0.5) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = data, fillOpacity = 0.5, color = "blue", weight = 1)}
#For credit cards
Cggplot_map(bostonZips, "Credit Card",
"Total Credit Card Contributions by Zip Code",
"By Zip Code")
Ctmap_interactive(bostonZips, "Credit Card", "Credit Card Contributions")
#For checks
Cggplot_map(bostonZips, "Check",
"Total Check Contributions by Zip Code",
"By Zip Code")
Ctmap_interactive(bostonZips, "Check", "Check Contributions")
#Layering and combining maps
leaflet_map <- tmap_leaflet(tm_shape(bostonZips) +
tm_polygons("Credit Card", palette = "plasma", title = "Credit Card Contributions", alpha = 0.5))
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1, group = "Credit Card") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "red", weight = 1, group = "Check") |>
addLayersControl(
overlayGroups = c("Credit Card", "Check"),
options = layersControlOptions(collapsed = FALSE)
)
# save del4Draft ----------------------------------------------------------
#saveRDS(del4Draft, file = "del4Draft.rds")
# deliverable 3 ----------------------------------------------------------
#necessary libraries
library(sf)
library(rio)
library(tmap)
library(dplyr)
library(ggplot2)
library(leaflet)
library(classInt)
#uploading the data
linkBoston="https://github.com/DACSS-Visual/SpatialData/raw/refs/heads/main/data/BostonContrib.xlsx"
bostonCont=rio::import(linkBoston)
#Ensure the data uploaded correctly.
#head(bostonCont)
#changing the column name
colnames(bostonCont)[colnames(bostonCont) == "Tender Type Description"] <- "Tender_Type" #update the column name
colnames(bostonCont)
#Ensure the data uploaded correctly.
View(bostonCont)
summary(bostonCont) #learning more about the dataset
#uploading the second datatset with the Boston zip codes
linkZips='https://raw.githubusercontent.com/DACSS-Visual/SpatialData/refs/heads/main/data/zip_codes.json'
bostonZips=sf::read_sf(linkZips)
#Ensure the data uploaded correctly.
head(bostonZips)
summary(bostonZips)
##DATA EXPLORATION -------------------------------------------------------------
#Finding the total distribution by the tender type
bostonCont |>
group_by(Tender_Type) |>
summarize(TotalContrib = sum(Amount, na.rm = TRUE)) |>
ggplot(aes(x = reorder(Tender_Type, TotalContrib),
y = TotalContrib, fill = Tender_Type)) +
geom_col() +
coord_flip() +
labs(title = "Total Contributions by Tender Type",
x = "Tender Type",
y = "Contribution Amount") +
theme_minimal()
#Viewing the relationships between contribution amount and zip code of the person
ggplot(bostonCont, aes(x = Zip, y = Amount)) +
geom_point(alpha = 0.5, aes(color = Tender_Type)) +
labs(title = "Contribution Amounts by Zip Code",
x = "Zip Code",
y = "Contribution Amount",
color = "Tender Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 50))
#Checking how the contribution per tender type and visualizing it
# Calculate total contribution amount per tender type
total_by_tender <- bostonCont |>
group_by(Tender_Type) |>
summarize(TotalAmount = sum(Amount, na.rm = TRUE)) |>
arrange(desc(TotalAmount))
# Print the result
print(total_by_tender)
#data viz to see the output
ggplot(total_by_tender, aes(x = reorder(Tender_Type, -TotalAmount), y = TotalAmount, fill = Tender_Type)) +
geom_col() +
labs(title = "Total Contribution Amount by Tender Type",
x = "Tender Type",
y = "Total Amount") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 40,hjust = 1))
#heatmap to show contribution by tender type
bostonCont |>
group_by(Zip, Tender_Type) |>
summarize(TotalContrib = sum(Amount, na.rm = TRUE)) |>
ggplot(aes(x = Tender_Type, y = Zip, fill = TotalContrib)) +
geom_tile() +
scale_fill_viridis_c(option = "brown") +
labs(title = "Contributions by Tender Type and Zip Code",
x = "Tender Type",
y = "Zip Code",
fill = "Total Contribution") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 40,hjust = 1))
##Cleaning data for the visualization
aggregBoston <- bostonCont |>
filter(Tender_Type %in% c("Credit Card", "Check")) |>
group_by(Tender_Type, Zip) |>
summarize(TotalContrib = sum(Amount, na.rm = TRUE), .groups = "drop") |>
tidyr::pivot_wider(names_from = Tender_Type, values_from = TotalContrib, values_fill = 0)
# Adding comparison columns: Difference and Ratio
aggregBoston <- aggregBoston |>
mutate(
Difference = `Credit Card` - Check,
Ratio = ifelse(Check > 0, `Credit Card` / Check, NA)
)
#head(bostonZips)
#connecting the two datasets
bostonZips <- bostonZips |>
left_join(aggregBoston, by = c("ZIP5" = "Zip"))
##Plotting -------------------------------------------------------------
#plotting a choropleth with the difference in contributions
ggplot(bostonZips) +
geom_sf(aes(fill = Difference), color = "white") +
scale_fill_viridis_c(option = "plasma", na.value = "grey") +
labs(title = "Difference in Contributions by Zip Code",
subtitle = "Tender Type of Credit Card minus Check",
fill = "Difference",
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 40))
#making a description the the ratio found and visualize it
bostonZips <- bostonZips |>
mutate(RatioCat = cut(Ratio, breaks = classIntervals(Ratio, n = 5, style = "quantile")$brks,
labels = c("Very Low", "Low", "Medium", "High", "Very High"),
include.lowest = TRUE))
#View(bostonZips)
ggplot(bostonZips) +
geom_sf(aes(fill = RatioCat), color = "white") +
scale_fill_brewer(palette = "RdYlBu", na.value = "grey") +
labs(title = "Ratio of Contributions by Zip Code",
subtitle = "Credit Card by Check",
fill = "Ratio Category",
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal()
# save del3Draft ----------------------------------------------------------
#Making an interactive map
tm_shape(bostonZips) +
tm_polygons("Difference", palette = "plasma", title = "Difference in Tender Types") +
tm_view(set.view = c(-71.0589, 42.3601, 10)) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1)
#saveRDS(del3Draft, file = "del3Draft.rds")
# deliverable 4  ----------------------------------------------------------
#creating a choropleth map
Cggplot_map <- function(data, var, title, subtitle) {
ggplot(data) +
geom_sf(aes(fill = !!sym(var)), color = "white") +
scale_fill_viridis_c(option = "plasma", na.value = "grey") +
labs(title = title,
subtitle = subtitle,
fill = paste(var, "Contributions"),
caption = "Data source: Massachusetts Office of Campaign and Political Finance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 40))}
#creating the second interactive map
Ctmap_interactive <- function(data, var, title) {
tm_shape(data) +
tm_polygons(var, palette = "plasma", title = title, alpha = 0.5) -> tmap_chorop
leaflet_map <- tmap_leaflet(tmap_chorop)
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = data, fillOpacity = 0.5, color = "blue", weight = 1)}
#For credit cards
Cggplot_map(bostonZips, "Credit Card",
"Total Credit Card Contributions by Zip Code",
"By Zip Code")
Ctmap_interactive(bostonZips, "Credit Card", "Credit Card Contributions")
#For checks
Cggplot_map(bostonZips, "Check",
"Total Check Contributions by Zip Code",
"By Zip Code")
Ctmap_interactive(bostonZips, "Check", "Check Contributions")
#Layering and combining maps
leaflet_map <- tmap_leaflet(tm_shape(bostonZips) +
tm_polygons("Credit Card", palette = "plasma", title = "Credit Card Contributions", alpha = 0.5))
leaflet_map |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "blue", weight = 1, group = "Credit Card") |>
addPolygons(data = bostonZips, fillOpacity = 0.5, color = "red", weight = 1, group = "Check") |>
addLayersControl(
overlayGroups = c("Credit Card", "Check"),
options = layersControlOptions(collapsed = FALSE)
)
# save del4Draft ----------------------------------------------------------
#saveRDS(del4Draft, file = "del4Draft.rds")
#uploading the data
linkBoston="https://github.com/DACSS-Visual/SpatialData/raw/refs/heads/main/data/BostonContrib.xlsx"
bostonCont=rio::import(linkBoston)
#Ensure the data uploaded correctly.
#head(bostonCont)
#changing the column name
colnames(bostonCont)[colnames(bostonCont) == "Tender Type Description"] <- "Tender_Type" #update the column name
colnames(bostonCont)
#Ensure the data uploaded correctly.
View(bostonCont)
summary(bostonCont) #learning more about the dataset
#uploading the second datatset with the Boston zip codes
linkZips='https://raw.githubusercontent.com/DACSS-Visual/SpatialData/refs/heads/main/data/zip_codes.json'
bostonZips=sf::read_sf(linkZips)
#Ensure the data uploaded correctly.
head(bostonZips)
summary(bostonZips)
