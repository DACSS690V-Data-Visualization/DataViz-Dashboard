) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
# Install ggplot2 if not already installed
if (!require("ggplot2")) install.packages("ggplot2")
# Sample Data
data1 <- data.frame(
Group = rep(c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Non-Conservative", "Non-Religious/Non-Conservative"), each = 3),
Outcome = rep(c("Self-esteem", "Depression", "Anxiety"), 4),
Value = c(75, 70, 20, 65, 60, 25, 50, 40, 60, 45, 30, 75) # Example percentages
)
# Plot
library(ggplot2)
ggplot(data1, aes(x = Group, y = Value, fill = Outcome)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
facet_wrap(~ Outcome, scales = "free_y") +
theme_minimal() +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcomes",
x = "Experiment Groups",
y = "Self-reported scores",
fill = "Well-being Outcome"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
# Install ggplot2 if not already installed
if (!require("ggplot2")) install.packages("ggplot2")
# Sample Data
data1 <- data.frame(
Group = rep(c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Non-Conservative", "Non-Religious/Non-Conservative"), each = 3),
Outcome = rep(c("Self-esteem", "Depression", "Anxiety"), 4),
Value = c(75, 70, 20, 65, 60, 25, 50, 40, 60, 45, 30, 75) # Example percentages
)
# Plot
library(ggplot2)
ggplot(data1, aes(x = Group, y = Value, fill = Outcome)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
facet_wrap(~ Outcome, scales = "free_y") +
theme_minimal() +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcomes",
x = "Experiment Groups",
y = "Self-reported scores",
fill = "Well-being Outcome"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 7))
# Install ggplot2 if not already installed
if (!require("ggplot2")) install.packages("ggplot2")
# Sample Data
data1 <- data.frame(
Group = rep(c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Non-Conservative", "Non-Religious/Non-Conservative"), each = 3),
Outcome = rep(c("Self-esteem", "Depression", "Anxiety"), 4),
Value = c(75, 70, 20, 65, 60, 25, 50, 40, 60, 45, 30, 75) # Example percentages
)
# Plot
library(ggplot2)
ggplot(data1, aes(x = Group, y = Value, fill = Outcome)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
facet_wrap(~ Outcome, scales = "free_y") +
theme_minimal() +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcomes",
x = "Experiment Groups",
y = "Self-reported scores",
fill = "Well-being Outcome"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6))
# Install ggplot2 if not already installed
if (!require("ggplot2")) install.packages("ggplot2")
# Sample Data
data1 <- data.frame(
Group = rep(c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Non-Conservative", "Non-Religious/Non-Conservative"), each = 3),
Outcome = rep(c("Self-esteem", "Depression", "Anxiety"), 4),
Value = c(75, 70, 20, 65, 60, 25, 50, 40, 60, 45, 30, 75) # Example percentages
)
# Plot
library(ggplot2)
ggplot(data1, aes(x = Group, y = Value, fill = Outcome)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
facet_wrap(~ Outcome, scales = "free_y") +
theme_minimal() +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcomes",
x = "Experiment Groups",
y = "Self-reported scores",
fill = "Well-being Outcome"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5))
# Install ggplot2 if not already installed
if (!require("ggplot2")) install.packages("ggplot2")
# Sample Data
data1 <- data.frame(
Group = rep(c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Non-Conservative", "Non-Religious/Non-Conservative"), each = 3),
Outcome = rep(c("Self-esteem", "Depression", "Anxiety"), 4),
Value = c(75, 70, 20, 65, 60, 25, 50, 40, 60, 45, 30, 75) # Example percentages
)
# Plot
library(ggplot2)
ggplot(data1, aes(x = Group, y = Value, fill = Outcome)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
facet_wrap(~ Outcome, scales = "free_y") +
theme_minimal() +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcomes",
x = "Experiment Groups",
y = "Self-reported scores",
fill = "Well-being Outcome"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5.5))
# Sample Data
data3 <- data.frame(
Group = rep(c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Liberal", "Non-Religious/Liberal"), each = 3),
Variable = rep(c("Self-Esteem", "Anxiety", "Depression"), times = 4),
Score = c(70, 30, 25, 65, 40, 35, 60, 50, 45, 55, 60, 55)
)
# Plot
library(ggplot2)
ggplot(data3, aes(x = Group, y = Score, group = Variable, color = Variable)) +
geom_line(aes(linetype = Variable), size = 1) +
geom_point(size = 3) +
theme_minimal() +
labs(
title = "Comparison of Well-Being Metrics Across Groups",
x = "Experiment Groups",
y = "Self-reported Score"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_brewer(palette = "Set1")
# Sample Data
heatmap_data <- data.frame(
Group = c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Liberal", "Non-Religious/Liberal"),
SelfEsteem = c(70, 65, 60, 55),
Anxiety = c(30, 40, 50, 60),
Depression = c(25, 35, 45, 55)
)
library(reshape2)
heatmap_data_long <- melt(heatmap_data, id = "Group")
# Plot
ggplot(heatmap_data_long, aes(x = Group, y = variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcomes",
x = "Experiment Groups",
y = "Self-Reported score"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Sample Data
heatmap_data <- data.frame(
Group = c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Liberal", "Non-Religious/Liberal"),
SelfEsteem = c(70, 65, 60, 55),
Anxiety = c(30, 40, 50, 60),
Depression = c(25, 35, 45, 55)
)
library(reshape2)
heatmap_data_long <- melt(heatmap_data, id = "Group")
# Plot
ggplot(heatmap_data_long, aes(x = Group, y = variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being",
x = "Experiment Groups",
y = "Self-Reported score"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Sample Data
heatmap_data <- data.frame(
Group = c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Liberal", "Non-Religious/Liberal"),
SelfEsteem = c(70, 65, 60, 55),
Anxiety = c(30, 40, 50, 60),
Depression = c(25, 35, 45, 55)
)
library(reshape2)
heatmap_data_long <- melt(heatmap_data, id = "Group")
# Plot
ggplot(heatmap_data_long, aes(x = Group, y = variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcome",
x = "Experiment Groups",
y = "Self-Reported score"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Sample Data
data3 <- data.frame(
Group = rep(c("Religious/Conservative", "Non-Religious/Conservative",
"Religious/Liberal", "Non-Religious/Liberal"), each = 3),
Variable = rep(c("Self-Esteem", "Anxiety", "Depression"), times = 4),
Score = c(70, 30, 25, 65, 40, 35, 60, 50, 45, 55, 60, 55)
)
# Plot
library(ggplot2)
ggplot(data3, aes(x = Group, y = Score, group = Variable, color = Variable)) +
geom_line(aes(linetype = Variable), size = 1) +
geom_point(size = 3) +
theme_minimal() +
labs(
title = "Religious Observance and Political Affiliation on Child Well-being Outcomes",
x = "Experiment Groups",
y = "Self-reported Score"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_brewer(palette = "Set1")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# clean memory ------------------------------------------------------------
rm(list = ls())
# read in data ------------------------------------------------------------
#set working directory
#Loading the dataset
location='https://github.com/DACSS-Visual/tabular_univar_cat/raw/main/data/'
file='eduwa.rda'
link=paste0(location,file)
load(file=url(link))
table(eduwa$LocaleType)
#Ensuring no more than 70 characters per row.
str(eduwa,width = 70,strict.width='cut')
#ensuring the dataset loading correctly
head(eduwa)
#including all values
absoluteT <- table(eduwa$LocaleType, exclude = 'nothing')
#naming all missing values
names(absoluteT)[is.na(names(absoluteT))] <- "Unknown"
#Making the absolute count into percent
propT <- prop.table(absoluteT) * 100
cat("Proportional frequencies (percent):\n")
#read the updated values
print(propT)
#then making it a dataframe
tableFreq <- as.data.frame(absoluteT)
print(head(tableFreq))
#Selecting only Suburb
suburbEduwa <- eduwa[eduwa$LocaleType == 'Suburb',]
#making sure the selected data is clean
suburbEduwa$LocaleSub <- droplevels(suburbEduwa$LocaleSub)
suburbTable <- table(suburbEduwa$LocaleSub)
# see data ----------------------------------------------------------
#print the final output
print(suburbTable)
# see data types ----------------------------------------------------------
str(suburbTable)
# deliverable 1 ----------------------------------------------------------
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
# deliverable 2 ----------------------------------------------------------
#del2Draft= base + geom_histogram(aes(x=Student.Teacher.Ratio))
#del2Draft
# save del2Draft ----------------------------------------------------------
#saveRDS(del2Draft, file = "del2Draft.rds")
# deliverable 3 ----------------------------------------------------------
#del3Draft= base + geom_point(aes(x=Student.Teacher.Ratio,
#y=Free.Lunch))
#del3Draft
# save del3Draft ----------------------------------------------------------
#saveRDS(del3Draft, file = "del3Draft.rds")
# deliverable 4  ----------------------------------------------------------
#library(sf)
#county_map=sf::read_sf("WA_County_Boundaries.geojson")
#head(county_map)
#head(mydata)
# merge data into map ----------------------------------------------------------
#mydataCounty=aggregate(data=mydata,Free.Lunch~County,FUN = mean)
#myMapLunch=merge(county_map,mydataCounty,by.x='JURISDIC_2',"County")
# prepare plot
#base=ggplot(myMapLunch)
#del4Draft=base + geom_sf(aes(fill=Free.Lunch))
#del4Draft
# save del4Draft ----------------------------------------------------------
#saveRDS(del4Draft, file = "del4Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
library(flexdashboard) # always
library(ggplot2) #will be used for the visualization
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("")
saveRDS(del1Draft, file = "del1Draft.rds")
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
---
title: "Data Visualization Dashbord"
```{r setup, include=FALSE}
## Intro {.sidebar}
Preparing the dashboard based on the instructions given at @magallanes_reyes_data_2022, and @aden-buie_flexdashboard_2024.
```{r}
readRDS("del1Draft.rds")
# deliverable 1 ----------------------------------------------------------
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
library(flexdashboard) # always
library(ggplot2) #will be used for the visualization
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
setwd("~/Documents/UMass - DACSS/Courses/DACSS 690V/DataViz-Dashboard")
readRDS("del1Draft.rds")
library(flexdashboard) # always
library(ggplot2) #will be used for the visualization
library(ggplot2)
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.3) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = 0.1) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = -0.1) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = -0.1) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
#Creating the barplot to display all the selected variables in the Eduwa dataset
del1Draft <- ggplot(tableFreq, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1))+ #using different colors to also serve as a legend to decipher the dataset.
geom_bar(stat = "identity", color = "black") +
#labeling the graph for easy reading
labs(
title = "Information on Schools in Different Locale Types",
subtitle = "Count of different locale types, Suburb subset",
caption = "Source: Eduwa dataset",
x = NULL,
y = NULL,
) +
theme_minimal() +
#making sure all text are easily readable and visible
geom_text(aes(label = Freq), vjust = -0.2) +
scale_fill_discrete(name = "Locale Categories") +
theme(axis.text.y = element_blank())
# save del1Draft ----------------------------------------------------------
saveRDS(del1Draft, file = "del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
readRDS("del1Draft.rds")
